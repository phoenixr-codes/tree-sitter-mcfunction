// This file is generated by fetch-commands.cjs
// DO NOT EDIT MANUALLY
module.exports = {
  aimassist: $ => choice(
    seq("aimassist",),
    seq("aimassist",$.target,"set",optional(seq($.float,$.float,$.float,$.AimAssistTargetMode,$.string,))),
    seq("aimassist",$.target,"clear",),
  ),
  allowlist: $ => choice(
    seq("allowlist",),
    seq("allowlist",$.AllowListAction,optional(seq($.string,))),
  ),
  camera: $ => choice(
    seq("camera",),
    seq("camera",$.target,"set",$.CameraPresets,"ease",$.float,$.Easing,"pos",$.xyz,"rot",$.rotation,$.rotation,),
    seq("camera",$.target,"set",$.CameraPresets,"ease",$.float,$.Easing,"pos",$.xyz,"facing",$.target,),
    seq("camera",$.target,"set",$.CameraPresets,"ease",$.float,$.Easing,"pos",$.xyz,"facing",$.xyz,),
    seq("camera",$.target,"set",$.CameraPresets,"ease",$.float,$.Easing,"pos",$.xyz,),
    seq("camera",$.target,"set",$.CameraPresets,"ease",$.float,$.Easing,"rot",$.rotation,$.rotation,),
    seq("camera",$.target,"set",$.CameraPresets,"ease",$.float,$.Easing,"facing",$.target,),
    seq("camera",$.target,"set",$.CameraPresets,"ease",$.float,$.Easing,"facing",$.xyz,),
    seq("camera",$.target,"set",$.CameraPresets,"ease",$.float,$.Easing,optional(seq($.default,))),
    seq("camera",$.target,"set",$.CameraPresets,"pos",$.xyz,"rot",$.rotation,$.rotation,),
    seq("camera",$.target,"set",$.CameraPresets,"pos",$.xyz,"facing",$.target,),
    seq("camera",$.target,"set",$.CameraPresets,"pos",$.xyz,"facing",$.xyz,),
    seq("camera",$.target,"target_entity",$.target,),
    seq("camera",$.target,"target_entity",$.target,"target_center_offset",$.float,$.float,$.float,),
    seq("camera",$.target,"remove_target",),
    seq("camera",$.target,"set",$.CameraPresets,"view_offset",$.float,$.float,),
    seq("camera",$.target,"set",$.CameraPresets,"entity_offset",$.float,$.float,$.float,),
    seq("camera",$.target,"set",$.CameraPresets,"rot",$.rotation,$.rotation,"view_offset",$.float,$.float,),
    seq("camera",$.target,"set",$.CameraPresets,"rot",$.rotation,$.rotation,"entity_offset",$.float,$.float,$.float,),
    seq("camera",$.target,"set",$.CameraPresets,"view_offset",$.float,$.float,"entity_offset",$.float,$.float,$.float,),
    seq("camera",$.target,"set",$.CameraPresets,"rot",$.rotation,$.rotation,"view_offset",$.float,$.float,"entity_offset",$.float,$.float,$.float,),
    seq("camera",$.target,"set",$.CameraPresets,"ease",$.float,$.Easing,"view_offset",$.float,$.float,),
    seq("camera",$.target,"set",$.CameraPresets,"ease",$.float,$.Easing,"entity_offset",$.float,$.float,$.float,),
    seq("camera",$.target,"set",$.CameraPresets,"ease",$.float,$.Easing,"rot",$.rotation,$.rotation,"view_offset",$.float,$.float,),
    seq("camera",$.target,"set",$.CameraPresets,"ease",$.float,$.Easing,"rot",$.rotation,$.rotation,"entity_offset",$.float,$.float,$.float,),
    seq("camera",$.target,"set",$.CameraPresets,"ease",$.float,$.Easing,"view_offset",$.float,$.float,"entity_offset",$.float,$.float,$.float,),
    seq("camera",$.target,"set",$.CameraPresets,"ease",$.float,$.Easing,"rot",$.rotation,$.rotation,"view_offset",$.float,$.float,"entity_offset",$.float,$.float,$.float,),
    seq("camera",$.target,"set",$.CameraPresets,"pos",$.xyz,),
    seq("camera",$.target,"set",$.CameraPresets,"rot",$.rotation,$.rotation,),
    seq("camera",$.target,"set",$.CameraPresets,"facing",$.target,),
    seq("camera",$.target,"set",$.CameraPresets,"facing",$.xyz,),
    seq("camera",$.target,"set",$.CameraPresets,optional(seq($.default,))),
    seq("camera",$.target,"clear",),
    seq("camera",$.target,"fade","time",$.float,$.float,$.float,"color",$.int,$.int,$.int,),
    seq("camera",$.target,"fade","time",$.float,$.float,$.float,),
    seq("camera",$.target,"fade","color",$.int,$.int,$.int,),
    seq("camera",$.target,"fade",),
    seq("camera",$.target,"fov_set",$.float,optional(seq($.float,$.Easing,))),
    seq("camera",$.target,"fov_clear",optional(seq($.float,$.Easing,))),
  ),
  camerashake: $ => choice(
    seq("camerashake",),
    seq("camerashake","add",$.target,optional(seq($.float,$.float,$.CameraShakeType,))),
    seq("camerashake","stop",optional(seq($.target,))),
  ),
  changesetting: $ => choice(
    seq("changesetting",),
    seq("changesetting","allow","cheats",$.Boolean,),
    seq("changesetting","difficulty",$.Difficulty,),
    seq("changesetting","difficulty",$.int,),
  ),
  clear: $ => choice(
    seq("clear",),
    seq("clear",optional(seq($.target,$.Item,$.int,$.int,))),
  ),
  clearspawnpoint: $ => choice(
    seq("clearspawnpoint",),
    seq("clearspawnpoint",optional(seq($.target,))),
  ),
  clone: $ => choice(
    seq("clone",),
    seq("clone",$.xyz,$.xyz,$.xyz,optional(seq($.MaskMode,$.CloneMode,))),
    seq("clone",$.xyz,$.xyz,$.xyz,"filtered",$.CloneMode,$.Block,optional(seq($.blockproperties,))),
  ),
  controlscheme: $ => choice(
    seq("controlscheme",),
    seq("controlscheme",$.target,"set",$.controlscheme,),
    seq("controlscheme",$.target,"clear",),
  ),
  damage: $ => choice(
    seq("damage",),
    seq("damage",$.target,$.int,optional(seq($.DamageCause,))),
    seq("damage",$.target,$.int,$.DamageCause,"entity",$.target,),
  ),
  daylock: $ => choice(
    seq("daylock",),
    seq("daylock",optional(seq($.Boolean,))),
  ),
  deop: $ => choice(
    seq("deop",),
    seq("deop",$.target,),
  ),
  dialogue: $ => choice(
    seq("dialogue",),
    seq("dialogue","open",$.target,$.target,optional(seq($.string,))),
    seq("dialogue","change",$.target,$.string,optional(seq($.target,))),
  ),
  difficulty: $ => choice(
    seq("difficulty",),
    seq("difficulty",$.Difficulty,),
    seq("difficulty",$.int,),
  ),
  effect: $ => choice(
    seq("effect",),
    seq("effect",$.target,"clear",optional(seq($.Effect,))),
    seq("effect",$.target,$.Effect,optional(seq($.int,$.int,$.Boolean,))),
    seq("effect",$.target,$.Effect,"infinite",optional(seq($.int,$.Boolean,))),
  ),
  enchant: $ => choice(
    seq("enchant",),
    seq("enchant",$.target,$.Enchant,optional(seq($.int,))),
    seq("enchant",$.target,$.int,optional(seq($.int,))),
  ),
  event: $ => choice(
    seq("event",),
    seq("event","entity",$.target,$.EntityEvents,),
  ),
  execute: $ => choice(
    seq("execute",),
    seq("execute","as",$.target,$.executechainedoption_0,),
    seq("execute","at",$.target,$.executechainedoption_0,),
    seq("execute","in",$.Dimension,$.executechainedoption_0,),
    seq("execute","positioned",$.xyz,$.executechainedoption_0,),
    seq("execute","positioned","as",$.target,$.executechainedoption_0,),
    seq("execute","rotated",$.rotation,$.rotation,$.executechainedoption_0,),
    seq("execute","rotated","as",$.target,$.executechainedoption_0,),
    seq("execute","facing",$.xyz,$.executechainedoption_0,),
    seq("execute","facing","entity",$.target,$.ActorLocation,$.executechainedoption_0,),
    seq("execute","align",$.string,$.executechainedoption_0,),
    seq("execute","anchored",$.ActorLocation,$.executechainedoption_0,),
    seq("execute",$.Option_If_Unless,"block",$.xyz,$.Block,optional(seq($.executechainedoption_0,))),
    seq("execute",$.Option_If_Unless,"block",$.xyz,$.Block,$.blockproperties,optional(seq($.executechainedoption_0,))),
    seq("execute",$.Option_If_Unless,"blocks",$.xyz,$.xyz,$.xyz,$.BlocksScanMode,optional(seq($.executechainedoption_0,))),
    seq("execute",$.Option_If_Unless,"entity",$.target,optional(seq($.executechainedoption_0,))),
    seq("execute",$.Option_If_Unless,"score",$.target,$.ScoreboardObjectives,$.compareoperator,$.target,$.ScoreboardObjectives,optional(seq($.executechainedoption_0,))),
    seq("execute",$.Option_If_Unless,"score",$.target,$.ScoreboardObjectives,"matches",$.fullintegerrange,optional(seq($.executechainedoption_0,))),
    seq("execute","run",$.codebuilderargs,),
  ),
  fill: $ => choice(
    seq("fill",),
    seq("fill",$.xyz,$.xyz,$.Block,$.blockproperties,optional(seq($.FillMode,))),
    seq("fill",$.xyz,$.xyz,$.Block,optional(seq($.FillMode,))),
    seq("fill",$.xyz,$.xyz,$.Block,$.blockproperties,"replace",optional(seq($.Block,$.blockproperties,))),
    seq("fill",$.xyz,$.xyz,$.Block,"replace",optional(seq($.Block,$.blockproperties,))),
  ),
  fog: $ => choice(
    seq("fog",),
    seq("fog",$.target,"push",$.string,$.string,),
    seq("fog",$.target,$.delete,$.string,),
  ),
  function: $ => choice(
    seq("function",),
    seq("function",$.filepath,),
  ),
  gamemode: $ => choice(
    seq("gamemode",),
    seq("gamemode",$.GameMode,optional(seq($.target,))),
    seq("gamemode",$.int,optional(seq($.target,))),
  ),
  gamerule: $ => choice(
    seq("gamerule",),
    seq("gamerule",),
    seq("gamerule",$.BoolGameRule,optional(seq($.Boolean,))),
    seq("gamerule",$.IntGameRule,optional(seq($.int,))),
  ),
  gametest: $ => choice(
    seq("gametest",),
    seq("gametest","runthis",),
    seq("gametest","run",$.GameTestName,optional(seq($.int,))),
    seq("gametest","run",$.GameTestName,$.Boolean,$.int,optional(seq($.int,))),
    seq("gametest","runset",optional(seq($.GameTestTag,$.int,))),
    seq("gametest","runsetuntilfail",optional(seq($.GameTestTag,$.int,))),
    seq("gametest","clearall",),
    seq("gametest","pos",),
    seq("gametest","create",$.string,optional(seq($.int,$.int,$.int,))),
    seq("gametest","runthese",),
    seq("gametest","stopall",),
  ),
  give: $ => choice(
    seq("give",),
    seq("give",$.target,$.Item,optional(seq($.int,$.int,$.json,))),
  ),
  help: $ => choice(
    seq("help",),
    seq("help",),
    seq("help",optional(seq($.CommandName,))),
    seq("help",$.int,),
  ),
  hud: $ => choice(
    seq("hud",),
    seq("hud",$.target,$.HudVisibility,optional(seq($.HudElement,))),
  ),
  inputpermission: $ => choice(
    seq("inputpermission",),
    seq("inputpermission","set",$.target,$.permission,$.state,),
    seq("inputpermission","query",$.target,$.permission,optional(seq($.state,))),
  ),
  kick: $ => choice(
    seq("kick",),
    seq("kick",$.target,$.message,),
  ),
  kill: $ => choice(
    seq("kill",),
    seq("kill",optional(seq($.target,))),
  ),
  list: $ => choice(
    seq("list",),
    seq("list",),
  ),
  locate: $ => choice(
    seq("locate",),
    seq("locate","structure",$.StructureFeature,optional(seq($.Boolean,))),
    seq("locate","biome",$.Biome,),
  ),
  loot: $ => choice(
    seq("loot",),
    seq("loot","spawn",$.xyz,"loot",$.string,optional(seq($.Tool,$.TODO,))),
    seq("loot","spawn",$.xyz,"kill",$.target,optional(seq($.Tool,$.TODO,))),
    seq("loot","spawn",$.xyz,"mine",$.xyz,optional(seq($.Tool,$.TODO,))),
    seq("loot","give",$.target,"loot",$.string,optional(seq($.Tool,$.TODO,))),
    seq("loot","give",$.target,"kill",$.target,optional(seq($.Tool,$.TODO,))),
    seq("loot","give",$.target,"mine",$.xyz,optional(seq($.Tool,$.TODO,))),
    seq("loot","insert",$.xyz,"loot",$.string,optional(seq($.Tool,$.TODO,))),
    seq("loot","insert",$.xyz,"kill",$.target,optional(seq($.Tool,$.TODO,))),
    seq("loot","insert",$.xyz,"mine",$.xyz,optional(seq($.Tool,$.TODO,))),
    seq("loot","replace","entity",$.target,$.EntityEquipmentSlot,$.int,$.int,"loot",$.string,optional(seq($.Tool,$.TODO,))),
    seq("loot","replace","entity",$.target,$.EntityEquipmentSlot,$.int,"loot",$.string,optional(seq($.Tool,$.TODO,))),
    seq("loot","replace","entity",$.target,$.EntityEquipmentSlot,$.int,$.int,"kill",$.target,optional(seq($.Tool,$.TODO,))),
    seq("loot","replace","entity",$.target,$.EntityEquipmentSlot,$.int,"kill",$.target,optional(seq($.Tool,$.TODO,))),
    seq("loot","replace","entity",$.target,$.EntityEquipmentSlot,$.int,$.int,"mine",$.xyz,optional(seq($.Tool,$.TODO,))),
    seq("loot","replace","entity",$.target,$.EntityEquipmentSlot,$.int,"mine",$.xyz,optional(seq($.Tool,$.TODO,))),
    seq("loot","replace","block",$.xyz,"slot","container",$.int,$.int,"loot",$.string,optional(seq($.Tool,$.TODO,))),
    seq("loot","replace","block",$.xyz,"slot","container",$.int,"loot",$.string,optional(seq($.Tool,$.TODO,))),
    seq("loot","replace","block",$.xyz,"slot","container",$.int,$.int,"kill",$.target,optional(seq($.Tool,$.TODO,))),
    seq("loot","replace","block",$.xyz,"slot","container",$.int,"kill",$.target,optional(seq($.Tool,$.TODO,))),
    seq("loot","replace","block",$.xyz,"slot","container",$.int,$.int,"mine",$.xyz,optional(seq($.Tool,$.TODO,))),
    seq("loot","replace","block",$.xyz,"slot","container",$.int,"mine",$.xyz,optional(seq($.Tool,$.TODO,))),
  ),
  me: $ => choice(
    seq("me",),
    seq("me",$.message,),
  ),
  mobevent: $ => choice(
    seq("mobevent",),
    seq("mobevent",$.MobEvent,optional(seq($.Boolean,))),
  ),
  music: $ => choice(
    seq("music",),
    seq("music","queue",$.string,optional(seq($.float,$.float,$.MusicRepeatMode,))),
    seq("music","play",$.string,optional(seq($.float,$.float,$.MusicRepeatMode,))),
    seq("music","stop",optional(seq($.float,))),
    seq("music","volume",$.float,),
  ),
  op: $ => choice(
    seq("op",),
    seq("op",$.target,),
  ),
  particle: $ => choice(
    seq("particle",),
    seq("particle",$.string,optional(seq($.xyz,))),
  ),
  permission: $ => choice(
    seq("permission",),
    seq("permission",$.PermissionsAction,),
  ),
  place: $ => choice(
    seq("place",),
    seq("place","structure",$.JigsawStructure,optional(seq($.xyz,$.Boolean,$.Boolean,$.Boolean,$.LiquidSettings,))),
    seq("place","jigsaw",$.filepath,$.string,$.int,optional(seq($.xyz,$.Boolean,$.Boolean,$.LiquidSettings,))),
    seq("place","feature",$.features,optional(seq($.xyz,))),
    seq("place","featurerule",$.featureRules,optional(seq($.xyz,))),
  ),
  playanimation: $ => choice(
    seq("playanimation",),
    seq("playanimation",$.target,$.string,optional(seq($.string,$.float,$.string,$.string,))),
  ),
  playsound: $ => choice(
    seq("playsound",),
    seq("playsound",$.string,optional(seq($.target,$.xyz,$.float,$.float,$.float,))),
  ),
  project: $ => choice(
    seq("project",),
    seq("project","export",$.ExportTypes,),
  ),
  recipe: $ => choice(
    seq("recipe",),
    seq("recipe","give",$.target,$.UnlockableRecipeValues,),
    seq("recipe","take",$.target,$.UnlockableRecipeValues,),
  ),
  reload: $ => choice(
    seq("reload",),
    seq("reload",),
  ),
  reloadconfig: $ => choice(
    seq("reloadconfig",),
    seq("reloadconfig",),
  ),
  reloadpacketlimitconfig: $ => choice(
    seq("reloadpacketlimitconfig",),
    seq("reloadpacketlimitconfig",),
  ),
  replaceitem: $ => choice(
    seq("replaceitem",),
    seq("replaceitem","block",$.xyz,"slot","container",$.int,$.Item,optional(seq($.int,$.int,$.json,))),
    seq("replaceitem","entity",$.target,$.EntityEquipmentSlot,$.int,$.Item,optional(seq($.int,$.int,$.json,))),
    seq("replaceitem","block",$.xyz,"slot","container",$.int,$.ReplaceMode,$.Item,optional(seq($.int,$.int,$.json,))),
    seq("replaceitem","entity",$.target,$.EntityEquipmentSlot,$.int,$.ReplaceMode,$.Item,optional(seq($.int,$.int,$.json,))),
  ),
  ride: $ => choice(
    seq("ride",),
    seq("ride",$.target,"start_riding",$.target,optional(seq($.TeleportRules,$.FillType,))),
    seq("ride",$.target,"stop_riding",),
    seq("ride",$.target,"evict_riders",),
    seq("ride",$.target,"summon_rider",$.EntityType,optional(seq($.string,$.string,))),
    seq("ride",$.target,"summon_ride",$.EntityType,optional(seq($.RideRules,$.string,$.string,))),
  ),
  save: $ => choice(
    seq("save",),
    seq("save",$.SaveMode,),
  ),
  say: $ => choice(
    seq("say",),
    seq("say",$.message,),
  ),
  schedule: $ => choice(
    seq("schedule",),
    seq("schedule","delay","add",$.filepath,$.int,optional(seq($.DelayMode,))),
    seq("schedule","delay","add",$.filepath,$.time,optional(seq($.DelayMode,))),
    seq("schedule","delay","add",$.filepath,$.time,optional(seq($.DelayMode,))),
    seq("schedule","delay","add",$.filepath,$.time,optional(seq($.DelayMode,))),
    seq("schedule","delay","clear",$.filepath,),
    seq("schedule","clear",$.filepath,),
    seq("schedule","on_area_loaded","add",$.xyz,$.xyz,$.filepath,),
    seq("schedule","on_area_loaded","add","circle",$.xyz,$.int,$.filepath,),
    seq("schedule","on_area_loaded","add","tickingarea",$.string,$.filepath,),
    seq("schedule","on_area_loaded","clear","tickingarea",$.string,optional(seq($.filepath,))),
    seq("schedule","on_area_loaded","clear","function",$.filepath,),
  ),
  scoreboard: $ => choice(
    seq("scoreboard",),
    seq("scoreboard","objectives","add",$.ScoreboardObjectives,"dummy",optional(seq($.string,))),
    seq("scoreboard","objectives","remove",$.ScoreboardObjectives,),
    seq("scoreboard","objectives","list",),
    seq("scoreboard","objectives","setdisplay",$.ScoreboardDisplaySlotSortable,optional(seq($.ScoreboardObjectives,$.ScoreboardSortOrder,))),
    seq("scoreboard","objectives","setdisplay","belowname",optional(seq($.ScoreboardObjectives,))),
    seq("scoreboard","players","list",optional(seq($.target,))),
    seq("scoreboard","players","reset",$.target,optional(seq($.ScoreboardObjectives,))),
    seq("scoreboard","players","test",$.target,$.ScoreboardObjectives,$.wildcardint,optional(seq($.wildcardint,))),
    seq("scoreboard","players","random",$.target,$.ScoreboardObjectives,$.int,$.int,),
    seq("scoreboard","players",$.ScoreboardPlayersNumAction,$.target,$.ScoreboardObjectives,$.int,),
    seq("scoreboard","players","operation",$.target,$.ScoreboardObjectives,$.operator,$.target,$.ScoreboardObjectives,),
  ),
  script: $ => choice(
    seq("script",),
    seq("script","debugger","listen",$.int,),
    seq("script","debugger","connect",optional(seq($.string,$.int,))),
    seq("script","debugger","close",),
    seq("script","profiler","start",),
    seq("script","profiler","stop",),
    seq("script","diagnostics","startcapture",),
    seq("script","diagnostics","stopcapture",),
    seq("script","profiler","stop",),
  ),
  scriptevent: $ => choice(
    seq("scriptevent",),
    seq("scriptevent",$.string,$.message,),
  ),
  sendshowstoreoffer: $ => choice(
    seq("sendshowstoreoffer",),
    seq("sendshowstoreoffer",$.target,$.RedirectLocation,$.string,),
    seq("sendshowstoreoffer",$.target,"server",),
  ),
  setblock: $ => choice(
    seq("setblock",),
    seq("setblock",$.xyz,$.Block,$.blockproperties,optional(seq($.SetBlockMode,))),
    seq("setblock",$.xyz,$.Block,optional(seq($.SetBlockMode,))),
  ),
  setmaxplayers: $ => choice(
    seq("setmaxplayers",),
    seq("setmaxplayers",$.int,),
  ),
  setworldspawn: $ => choice(
    seq("setworldspawn",),
    seq("setworldspawn",optional(seq($.xyz,))),
  ),
  spawnpoint: $ => choice(
    seq("spawnpoint",),
    seq("spawnpoint",optional(seq($.target,$.xyz,))),
  ),
  spreadplayers: $ => choice(
    seq("spreadplayers",),
    seq("spreadplayers",$.rotation,$.rotation,$.float,$.float,$.target,optional(seq($.rotation,))),
  ),
  stop: $ => choice(
    seq("stop",),
    seq("stop",),
  ),
  stopsound: $ => choice(
    seq("stopsound",),
    seq("stopsound",$.target,optional(seq($.string,))),
  ),
  structure: $ => choice(
    seq("structure",),
    seq("structure","save",$.string,$.xyz,$.xyz,optional(seq($.Boolean,$.Boolean,))),
    seq("structure","delete",$.string,),
    seq("structure","load",$.string,$.xyz,optional(seq($.Rotation,$.Mirror,$.Boolean,$.Boolean,$.Boolean,$.float,$.string,))),
    seq("structure","load",$.string,$.xyz,optional(seq($.Rotation,$.Mirror,$.StructureAnimationMode,$.float,$.Boolean,$.Boolean,$.Boolean,$.float,$.string,))),
  ),
  summon: $ => choice(
    seq("summon",),
    seq("summon",$.EntityType,optional(seq($.xyz,$.rotation,$.rotation,$.EntityEvents,$.string,))),
    seq("summon",$.EntityType,$.string,optional(seq($.xyz,))),
    seq("summon",$.EntityType,optional(seq($.xyz,"facing",$.xyz,$.EntityEvents,$.string,))),
    seq("summon",$.EntityType,optional(seq($.xyz,"facing",$.target,$.EntityEvents,$.string,))),
  ),
  tag: $ => choice(
    seq("tag",),
    seq("tag",$.target,$.TagChangeAction,$.TagValues,),
    seq("tag",$.target,"list",),
  ),
  teleport: $ => choice(
    seq("teleport",),
    seq("tp",),
    seq("teleport",$.xyz,optional(seq($.Boolean,))),
    seq("teleport",$.xyz,optional(seq($.rotation,$.rotation,$.Boolean,))),
    seq("teleport",$.xyz,"facing",$.xyz,optional(seq($.Boolean,))),
    seq("teleport",$.xyz,"facing",$.target,optional(seq($.Boolean,))),
    seq("teleport",$.target,$.xyz,optional(seq($.rotation,$.rotation,$.Boolean,))),
    seq("teleport",$.target,$.xyz,optional(seq($.Boolean,))),
    seq("teleport",$.target,$.xyz,"facing",$.xyz,optional(seq($.Boolean,))),
    seq("teleport",$.target,$.xyz,"facing",$.target,optional(seq($.Boolean,))),
    seq("teleport",$.target,),
    seq("teleport",$.target,$.target,optional(seq($.Boolean,))),
  ),
  tell: $ => choice(
    seq("tell",),
    seq("tell",$.target,$.message,),
  ),
  tellraw: $ => choice(
    seq("tellraw",),
    seq("tellraw",$.target,$.json,),
  ),
  testfor: $ => choice(
    seq("testfor",),
    seq("testfor",$.target,),
  ),
  testforblock: $ => choice(
    seq("testforblock",),
    seq("testforblock",$.xyz,$.Block,optional(seq($.blockproperties,))),
  ),
  testforblocks: $ => choice(
    seq("testforblocks",),
    seq("testforblocks",$.xyz,$.xyz,$.xyz,optional(seq($.TestForBlocksMode,))),
  ),
  tickingarea: $ => choice(
    seq("tickingarea",),
    seq("tickingarea","add",$.xyz,$.xyz,optional(seq($.string,$.Boolean,))),
    seq("tickingarea","add","circle",$.xyz,$.int,optional(seq($.string,$.Boolean,))),
    seq("tickingarea","remove",$.xyz,),
    seq("tickingarea","remove",$.string,),
    seq("tickingarea","remove_all",),
    seq("tickingarea","list",optional(seq($.AllDimensions,))),
    seq("tickingarea","preload",$.xyz,optional(seq($.Boolean,))),
    seq("tickingarea","preload",$.string,optional(seq($.Boolean,))),
  ),
  time: $ => choice(
    seq("time",),
    seq("time","add",$.int,),
    seq("time","set",$.int,),
    seq("time","set",$.TimeSpec,),
    seq("time","query",$.TimeQuery,),
  ),
  title: $ => choice(
    seq("title",),
    seq("title",$.target,"clear",),
    seq("title",$.target,"reset",),
    seq("title",$.target,$.TitleSet,$.message,),
    seq("title",$.target,"times",$.int,$.int,$.int,),
  ),
  titleraw: $ => choice(
    seq("titleraw",),
    seq("titleraw",$.target,"clear",),
    seq("titleraw",$.target,"reset",),
    seq("titleraw",$.target,$.TitleRawSet,$.json,),
    seq("titleraw",$.target,"times",$.int,$.int,$.int,),
  ),
  toggledownfall: $ => choice(
    seq("toggledownfall",),
    seq("toggledownfall",),
  ),
  transfer: $ => choice(
    seq("transfer",),
    seq("transfer",$.string,$.string,optional(seq($.int,))),
  ),
  weather: $ => choice(
    seq("weather",),
    seq("weather",$.WeatherType,optional(seq($.int,))),
    seq("weather","query",),
  ),
  wsserver: $ => choice(
    seq("wsserver",),
    seq("wsserver",$.text,),
  ),
  xp: $ => choice(
    seq("xp",),
    seq("xp",$.int,optional(seq($.target,))),
    seq("xp",$.int,optional(seq($.target,))),
  ),
};